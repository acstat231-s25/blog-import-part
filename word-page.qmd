---
title: "Text Analysis"
author: "Tiffany Sun"
---

```{r}
#| label: setup
#| include: false

# improve digit and NA display 
options(scipen = 1, knitr.kable.NA = '')

# load packages
library(tidyverse)
library(readr)
library(wordcloud2)
library(RColorBrewer)
library(plotly)
```

```{r}
#| label: read-files

# Overall Text Analysis Dataset
total_games_words <- readRDS("data/processed/total_games_words.rds")

# Per Game Text Analysis Datasets
grouped_games_words <- readRDS("data/processed/grouped_games_words.rds")
grouped_games_sentiments <- readRDS("data/processed/grouped_games_sentiments.RDS")

# Time vs Text Analysis Datasets
year_2025 <- readRDS("data/processed/year_2025.RDS")
year_2020 <- readRDS("data/processed/year_2020.RDS")
year_2015 <- readRDS("data/processed/year_2015.RDS")
year_2010 <- readRDS("data/processed/year_2010.RDS")
year_2005 <- readRDS("data/processed/year_2005.RDS")


```

We can uncover meaningful insights and patterns about the tens of thousands of games people play on STEAM through text analysis. What are the prominent patterns in game descriptions? What words and sentimental patterns appear the most common in all game descriptions combined? Do text tell us the differences and similarities of released games through the passage time? In what ways can we apply these findings?

## Analysis Process
To address these inquiries, I analyzed text through predominantly word-clouds and bar-charts. Games with only english text are included. Words excluded definitively are stop words. In some visualizations, words without AFINN values are excluded to place emphasis on analyzing sentiment across text. 

#### Variables Explored:
There are four main variables that are explored in various visualizations:

- `word` - Singular words extracted from game's descriptions. 

- `year` - A categorical variable of time. 

- `n` - Count of instances, which in this context refer to words. 

- `value` - AFINN Sentimental Value

#### Packages Utilized:
- `tidyverse`  

- `readr` 

- `wordcloud2`

- `RColorBrewer`

- `plotly`

#### AFINN:
AFINN, developed by Finn Arup Nielson, is a lexicon (list) of words rated for their emotional valence. Each word can be assigned to a value from -5 to +5, with negative values indicative of negative sentiments and positive values indicative of positive sentiments. For instance, words such as "happy", "adventurous", and "magic" would have positive values, while words like "disgust' and "evil" would have negative values. 

#### Stop Words:
Stop words are essentially your everyday words that don't really contribute to meanings or ideas. They include articles such as "the" and "is". 

::: {.callout-note}
Disclaimer: Visualizations exclude most games which descriptions are in other languages. 
:::

## Overall Analysis

### Word Cloud
This word cloud represents words in all Steam games' descriptions excluding those of other languages AND are associated with their corresponding sentimental values. Hover to see the prevalence of each word.


```{r}
#| label: Word Cloud
#| fig-cap: "Figure 1"
#| fig-cap-location: bottom

# Set a fixed visual
set.seed(2025)

# Creates a wordcloud customizable by shape, color, and font. 
wordcloud2(total_games_words, 
           size = .6, shape = "pentagon", color = "#66c0f4", backgroundColor = "white", fontFamily = 'SegoeUI', fontWeight = 'normal')

```



### Top Ten Sentimental Words Across 5 Year Intervals
Explore the top 10 most common sentimental words found in all recorded STEAM games across time! I decided to visualize the top ten words found in games released the following years to explore and determine potential differences and similarities found after each five years intervals: 2005, 2010, 2015, 2020, and 2025. 

::: {.panel-tabset}

### 2025
```{r} 
#| label: 2025 Top 10
#| fig-cap: "Figure 2: 2025's Top Ten"
#| fig-cap-location: bottom

# A horizontal bar chart that shows the sentimental magnitude of the top 10
# common words found in STEAM's games' descriptions.
graph_2025 <- ggplot(year_2025, aes(x = fct_reorder(word, n), y = n)) + 
  geom_col(aes(fill = value), color = "darkgrey") + 
  coord_flip() + 
  labs(
    x = NULL,
    y = "Number of instances",
    title = "Top 10 Words in STEAM's Games Descriptions ", 
    subtitle = "2025", 
# A scale gradient is implemented, with severity in orange saturation 
# indicating negative sentimentality and severity in blue saturation indicating
# positive sentimentality
    fill = "Sentimental Magnitude") +
    scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
    theme_minimal() 
# Customized hovered text. Features the specific count of the instance and its
# corresponding AFINN value. 
ggplotly(graph_2025, tooltip = c("y", "value"))

```

### 2020
```{R}
#| label: 2020 Top 10
#| fig-cap: "Figure 3: 2020's Top 10"
#| fig-cap-location: bottom

# A horizontal bar chart that shows the sentimental magnitude of the top 10
# common words found in STEAM's games' descriptions.
graph_2020 <- ggplot(year_2020, aes(x = fct_reorder(word, n), y = n)) + 
  geom_col(aes(fill = value), color = "darkgrey") + 
  coord_flip() + 
  labs(
    x = NULL,
    y = "Number of instances",
    title = "Top 10 Words in STEAM's Games Descriptions ", 
    subtitle = "2020", 
    fill = "Sentimental Magnitude") +
# A scale gradient is implemented, with severity in orange saturation 
# indicating negative sentimentality and severity in blue saturation indicating
# positive sentimentality.
    scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
    theme_minimal() 
# Customized hovered text. Features the specific count of the instance and its
# corresponding AFINN value.
ggplotly(graph_2020, tooltip = c("y", "value"))



```

### 2015
```{R}
#| label: 2015 Top 10
#| fig-cap: "Figure 4: 2015's Top 10"
#| fig-cap-location: bottom
# A horizontal bar chart that shows the sentimental magnitude of the top 10
# common words found in STEAM's games' descriptions.
graph_2015 <- ggplot(year_2015, aes(x = fct_reorder(word, n), y = n)) + 
  geom_col(aes(fill = value), color = "darkgrey") + 
  coord_flip() + 
  labs(
    x = NULL,
    y = "Number of instances",
    title = "Top 10 Words in STEAM's Games Descriptions ", 
    subtitle = "2015", 
    fill = "Sentimental Magnitude") +
# A scale gradient is implemented, with severity in orange saturation 
# indicating negative sentimentality and severity in blue saturation indicating
# positive sentimentality.
    scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
    theme_minimal() 
# Customized hovered text. Features the specific count of the instance and its
# corresponding AFINN value.
ggplotly(graph_2015, tooltip = c("y", "value"))

```

### 2010
```{r}
#| label: 2010 Top 10
#| fig-cap: "Figure 5: 2010's Top 10"
#| fig-cap-location: bottom

# A horizontal bar chart that shows the sentimental magnitude of the top 10
# common words found in STEAM's games' descriptions.
graph_2010 <- ggplot(year_2010, aes(x = fct_reorder(word, n), y = n)) + 
  geom_col(aes(fill = value), color = "darkgrey") + 
  coord_flip() + 
  labs(
    x = NULL,
    y = "Number of instances",
    title = "Top 10 Words in STEAM's Games Descriptions ", 
    subtitle = "2010", 
    fill = "Sentimental Magnitude") +
# A scale gradient is implemented, with severity in orange saturation 
# indicating negative sentimentality and severity in blue saturation indicating
# positive sentimentality.
    scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
    theme_minimal() 
# Customized hovered text. Features the specific count of the instance and its
# corresponding AFINN value.
ggplotly(graph_2010, tooltip = c("y", "value"))

```

### 2005
```{R}
#| label: 2005 Top 10
#| fig-cap: "Figure 6: 2005's Top 10"
#| fig-cap-location: bottom

# A horizontal bar chart that shows the sentimental magnitude of the top 10
# common words found in STEAM's games' descriptions.
graph_2005 <- ggplot(year_2005, aes(x = fct_reorder(word, n), y = n)) + 
  geom_col(aes(fill = value), color = "darkgrey") + 
  coord_flip() + 
  labs(
    x = NULL,
    y = "Number of instances",
    title = "Top 10 Words in STEAM's Games Descriptions ", 
    subtitle = "2005", 
    fill = "Sentimental Magnitude") +
# A scale gradient is implemented, with severity in orange saturation 
# indicating negative sentimentality and severity in blue saturation indicating
# positive sentimentality.
    scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
    theme_minimal() 
# Customized hovered text. Features the specific count of the instance and its
# corresponding AFINN value.
ggplotly(graph_2005, tooltip = c("y", "value"))

```

:::

#### Trends across Time
The top ten words in STEAM's Games Descriptions in all five years tend to be action-themed. There were also a several words that were on the top 10 across different years, which are: "enemies", "battle", and "adventure". In most years, more than half the terms evoke a negative sentiment whereas in 2015, there was a balanced mixture of both positive and negative AFINN words. 


## Game-Specific Analysis 
While it can be informative to see patterns and trends from a VERY big picture, potential crucial, small details may go unnoticed. 

### Elder Scrolls vs. Grand Auto Theft?
If you explored Surya's General Top Ten Network, you'll notice that game series Elder Scrolls and Grand Auto Theft are two of the most top Metacritic rated games. This poses a few questions: What textual commonalites do they both share that may contribute to their high ratings? What does that say about STEAM's audience? 

::: {.panel-tabset}

#### Elder Scrolls IV Deluxe Word Cloud

```{r}
#| label: Elder Scroll Word Cloud
#| fig-cap: "Figure 7"
#| fig-cap-location: bottom

elder_scrolls <- 
  grouped_games_words |>
  filter(name == "The Elder Scrolls IV: Oblivion® Game of the Year Edition Deluxe") |>
  ungroup() 

elder_scrolls |>
  select(word, n) |>
  wordcloud2(size = .4, shape = "square", color = "#1b2838", backgroundColor = "white", fontFamily = 'SegoeUI', fontWeight = 'normal')

```

#### Elder Scrolls IV Deluxe Sentiment Analysis
Hover to see the word associated with the value. 

```{R}
#| label: Elder Scroll IV Sentimental Distribution
#| fig-cap: "Figure 8"
#| fig-cap-location: bottom

elder_sentiments <- grouped_games_sentiments |>
  filter(name == "The Elder Scrolls IV: Oblivion® Game of the Year Edition Deluxe") |>
  ungroup() 

p <- ggplot(unique(elder_sentiments), aes(x = word, y = value)) + 
  geom_bar(stat = "identity", aes(fill = value), color = "darkgrey") +
  scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
  
  theme_minimal() +
  labs(
    title = "The Elder Scrolls IV: Oblivion® Game of the Year Edition Deluxe",
    x = "Word",
    y = "Sentiment Value", 
    fill = "Sentimental Magnitude"
  ) + 
  theme(axis.text.x = element_blank())


ggplotly(p, tooltip = c("x", "y"))
```

:::


::: {.panel-tabset}
#### Grand Theft Auto V Word Cloud

```{r}
#| label: Grand Theft Auto V Word Cloud 
#| fig-cap: "Figure 9"
#| fig-cap-location: bottom

grand_theft <- grouped_games_words |>
  filter(name == "Grand Theft Auto V") |>
  ungroup() 

grand_theft |>
  select(word, n) |>
  wordcloud2(size = .7, shape = "square", color = "#1b2838", backgroundColor = "white", fontFamily = 'SegoeUI', fontWeight = 'normal')

```

#### Grand Theft Auto V Sentiment Analysis
Hover to see the word associated with the value. 
```{R}
#| label: Grand Theft Auto V Sentimental Distribution
#| fig-cap: "Figure 10"
#| fig-cap-location: bottom

grand_theft_sentiments <- grouped_games_sentiments |>
  filter(name == "Grand Theft Auto V") |>
  ungroup() 

q <- ggplot(unique(grand_theft_sentiments), aes(x = word, y = value)) + 
  geom_bar(stat = "identity", aes(fill = value), color = "darkgrey") +
  scale_fill_gradient2(low = "#ff9000",
                       mid = "aliceblue",
                       high = "#66c0f4") +
  labs(
    title = "Grand Theft Auto V",
    x = "Word",
    y = "Sentiment Value",
    fill = "Sentimental Magnitude"
  )  +
  theme_minimal() +
  theme(axis.text.x = element_blank())


ggplotly(q, tooltip = c("x", "y"))
```
:::

It's interesting to see that while both games differ in terms of settings and their overall themes, they share several terms, one especially is "world". Other terms such as "characters" and "explore" hint their similarity as games that empower players to roam in their respective realms and engage in roleplaying. Perhaps this similarity also contribute to their statuses as top rated games, as these games that enable high immersive interaction and exploration may appeal to most of STEAM's audience. While there are many similarities, a noticeable difference between the two games lies in their average sentimental values. Elder Scrolls IV has a balanced mixture of both positive and negative words while Grand Theft Auto V has more positive words. 

## Take-Aways
A recurring theme found in most words is *action*. Whether it be analyzing game descriptions from big, small, or chronological scale, I tend to see most words related to action. Additionally, prevalent words that have a negative AFINN values are typically about challenges such as combat or war while those with positive AFINN values are typically descriptive- "fun", "glory", "powerful", etc. What piqued my curiosity was the fact that prevalent words remain similar across time, and there were several that even stayed in the top 10. Perhaps this is due to the fact that action games tend to be more popular, as reinforced by my partners' analyses. Action games entice players with prospects of fun challenges and immersive exploration. Hence, more games that are released are in the genre of action than others genres. Overall, textual analysis can be used to reveal trends and insights such as those uncovered in this project, which can contribute to market research in the field of entertainment such as video-games production. 


