---
title: "Wrangling Steam Dataset"
subtitle: "From JSON to table"
author: "John Lim, Surya Rao, Tiffany Sun"
date: "2025-04-16"
format: pdf
---

The purpose of this file is to produce RDS files that wrangles data collected in the JSON file of the Steam games dataset. The CSV file incorrectly shifts columns, so we must start from the source. 

name - Name of the game.
release_data - When the game was released.
required_age - How old to buy/play the game.
price - How much the game costs.
dlc_count - How many dlc's the game has.
detailed_description, about_the_game, short_description - Information about game.
reviews - Thoughts on the game.
metacritic_score - Numeric score out of 100 from publications.
achievements - Number of achievements in the game.
recommendations - How many recommendations the game received.
notes - Further disclaimers about the game.
supported_languages - Languages that the game's text can be in.
full_audio_languages - Languages that the game's audio can be in. None means no spoken language.
developers - Who developed the game.
publishers - Who published the game.
categories - Groupings the game is placed into.
genres - Type of game.
positive - Number of positive reviews.
negative - Number of negative reviews.
average_playtime_forever - Average playtime in minutes since game's release
median_playtime_forever - Median playtime in minutes since game's release
peak_ccu - Maximum number of concurrent users.
tags - Different terms to describe the game--includes count as well.


```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(eval = FALSE, message = FALSE)

# improve digit and NA display 
options(scipen = 1, knitr.kable.NA = '')

# load packages
library(tidyverse)
library(jsonlite)
library(readr)
library(purrr)
```

```{r}
#| label: read-files

# after reading csv, we can see at later observations, the data is shifted
# games_csv <- read_csv("../data/raw/games.csv")

# turn json data into dataframe
games_json <- read_json("../data/raw/games.json")
# flip the rows and columns since we want each observation as own row
games_transpose <- transpose(games_json)
# turn into data table with specific variables of interest 
games_tibble <- games_transpose |>
  as_tibble() |>
  select(name, release_date, required_age, price, dlc_count,
         detailed_description, about_the_game, short_description, reviews,
         metacritic_score, achievements, recommendations, notes,
         supported_languages, full_audio_languages, developers, publishers,
         categories, genres, positive, negative, estimated_owners,
         average_playtime_forever, median_playtime_forever, peak_ccu, tags)

```

```{r}
#| label: clean-table

# make a function that will clean up the string after condensing list
clean <- function(x) {
  x |> str_replace_all("list\\(","") |> 
    str_replace_all("\\)","") |> 
    str_replace_all('\\"',"")
}

# remove nested values by converting into strings
games_string <- games_tibble |>
  mutate(across(-c("tags"),
                ~ .x |>
                  map(~ paste0(.x, collapse = ", ")) |>
                  clean()))

# change numeric values back into number form
games_clean0 <- games_string |>
  mutate(across(c(required_age, price, dlc_count, metacritic_score,
                  achievements, recommendations, positive, negative,
                  average_playtime_forever, median_playtime_forever, peak_ccu),
         ~ parse_number(.x))) |>
  # remove game names in other languages by removing the following unicode
  # blocks corresponding to Korean, Chinese, and Japanese:
    # 4E00-9FFF for CJK Unified Ideographs
    # 3000-303F for CJK Symbols and Punctuation
    # u30a0-u30ff for Katakana Japanese
    # u3040-u309f for Hiragana Japanese
    # UAC00-UD7AF for Hangul Syllable
  # keep games with complete descriptions, a publisher, and has reviews
  filter(!(str_detect(name, "[\U4E00-\U9FFF\U3000-\U303F-\u30a0-\u30ff\u3040-\u309f-\UAC00-\UD7AF]")) &
           detailed_description != "" &
           about_the_game != "" &
           short_description != "" &
           publishers != "" &
           (positive != 0 | negative != 0)) |>
  # remove duplicates and keeping the most updated values
  arrange(desc(recommendations), desc(positive), desc(negative)) |>
  distinct(name, .keep_all = TRUE)
  
# create game rating metric that describes how people think of games
# find net review rating, then divide by total reviews to get the ratio
# values range from -1 to 1, where -1 means all reviews were negative,
# 0 means there were an equal number of positive and negative reviews,
# and 1 means all reviews were positive
games_clean <- games_clean0 |>
  mutate(net_review_ratio = (positive - negative) / (positive + negative))

```

```{r}
#| label: saving-data

# main file
saveRDS(games_clean, file = "../data/processed/clean_games.RDS")

```


