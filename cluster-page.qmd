---
title: "Grouping Games Through Clustering"
author: "John Lim"
---

```{r}
#| label: setup
#| include: false

# improve digit and NA display 
options(scipen = 1, knitr.kable.NA = '')

# load packages
library(tidyverse)
library(readr)
library(purrr)
library(broom)
library(ggplot2)
library(ggrepel)
library(GGally)
library(kableExtra)
library(DT)
```

```{r}
#| label: read-files

# read data for clustering
games_kmeans5 <- readRDS("data/processed/games_kmeans5.rds")
games_c5 <- readRDS("data/processed/games_c5.rds")
```

# Technique

To address the question about which video games are similar (and how), I wanted to use unsupervised learning techniques. I will use *k*-means clustering as a way to assign video games to distinct groups, which may uncover similarities between the games. 

## Variables

For this analysis, I chose 9 quantitative variables to cluster the games by as follows: 

- `required_age` - The age required to to buy and play the game.

- `price` - The price of the game.

- `dlc_count` - The count of how much Downloadable Content (DLC) the game has. This is additional game content that can be purchased.

- `metacritic_score` - The score given by [Metacritic](https://www.metacritic.com/about-us/), a platform that rates games, movies, TV shows, and albums. This is a numeric score out of 100 based off of the weighted average of highly respected critics' reviews.

- `achievements` - The number of achievements in the game.

- `recommendations` - The number of recommendations that the game received.

- `median_playtime_forever` - The median playtime in minutes since the game's release.

- `peak_ccu` - The highest number of concurrent users (CCU) of the game in a given period.

- `player_rating_ratio` - A self-created statistic that describes how players think of the game by dividing the net positive review count (positive - negative) by total number of reviews. The value ranges from -1 to 1, where -1 means that all reviews were negative (hated), 0 means that there were an equal number of positive and negative reviews (neutral), and 1 means that all reviews were positive (loved).

Since the variables on different scales (e.g. 0 to 100, -1 to 1, and 0 to 1,000,000+), it is important to standardize the variables (i.e. level the playing field). This way, the locations of the centroids will not be dominated by its relation to one variable over another when using *k*-means clustering.

## Elbow Plot

Since we are working with 9 quantitative variables, to determine the optimal number of clusters, I first consulted an elbow plot. We want to look at when the within-cluster variance is relatively small, without creating too many clusters. However, with too many clusters, it may become too difficult to interpret the results or for the results to hold any significant meaning. Therefore, based on the elbow plot (see @fig-elbow-plot), 5 clusters appear to be reasonably optimal as it is where the graph "bends" without containing too many clusters.

![Elbow Plot Indicates A Bend at 5 Clusters](images/elbow_plot.png "Elbow Plot"){#fig-elbow-plot}

## Clusters

After performing a *k*-means clustering with *k* = 5 clusters, it appears that our clusters are grouped by the following characteristics (see @tbl-fit-cluster):

- **Cluster 1**: Higher DLC counts, extremely high number of achievements, and lower player ratings.

- **Cluster 2**: Generally average values across the variables except for lower Metacritic scores and high player ratings.

- **Cluster 3**: Highest age requirements, highest prices, higher Metacritic scores, high number of recommendations, and the highest CCU counts.

- **Cluster 4**: Lowest median playtimes and lowest player ratings.

- **Cluster 5**: Higher prices, highest DLC counts, highest Metacritic scores, higher number of recommendations, and highest median playtimes.

```{r}
#| label: tbl-fit-cluster
#| tbl-cap: "Locations of Centroids based on Standardized Variables"
#| tbl-cap-location: bottom

# present table that shows where centroids are located
games_kmeans5$centers |>
  as_tibble() |>
  mutate(Cluster = row_number(), .before = 1) |>
 kable(booktabs = TRUE,
       col.names = c("Cluster","Required Age", "Price ($)", "DLC Count",
                      "Metacritic Score", "Achievements", "Recommendations",
                      "Median Playtime Forever (min)", "Peak CCU",
                      "Player Rating Ratio"),
       caption = "Note: Each Quantitative Variable is Standardized",
       digits = 3) |>
  kable_styling()

```

Therefore, Cluster 1 contains games that may cater towards completionists, although lacking in positive ratings. Cluster 2 contains "average" games that are not approved by Metacritics but are loved by players. Cluster 3 contains expensive games that are catered towards older audiences and are widely recommended and played. Cluster 4 contains games that are subjectively terrible; players do not play these games for long and give bad ratings. Finally, Cluster 5 contains expensive games with a lot of content for committed players; these games are widely shared and receive high Metacritic scores.

Let's see how well the clustering grouped the games! To do so, I will take a random sample [@sample_n_rows] of games within each cluster.

::: {.panel-tabset}

### Cluster 1

```{r}
#| label: tbl-game-example1
#| tbl-cap: "Table Featuring Games From Cluster 1"
#| tbl-cap-location: bottom

#for reproducibility
set.seed(42069777)

# showcase games in cluster 1
games_c5 |>
  filter(cluster_standardized == 1) |>
  sample_n(6) |>
  kable(booktabs = TRUE,
       col.names = c("Name", "Cluster" ,"Release Date","Required Age",
                     "Price ($)", "DLC Count", "Metacritic Score",
                     "Achievements", "Recommendations", 
                     "Median Playtime Forever (min)", "Peak CCU",
                     "Player Rating Ratio"),
       digits = 3) |>
  kable_styling()

```

From @tbl-game-example1, we can see that *Achievement Idler: Black*, *HUBE: Seeker of Achievements*, and *Trivia Vault: Video Game Trivia Deluxe* are similar as they have high achievement counts.

### Cluster 2

```{r}
#| label: tbl-game-example2
#| tbl-cap: "Table Featuring Games From Cluster 2"
#| tbl-cap-location: bottom

#for reproducibility
set.seed(42069777)

# showcase games in cluster 2
games_c5 |>
  filter(cluster_standardized == 2) |>
  sample_n(6) |>
  kable(booktabs = TRUE,
       col.names = c("Name", "Cluster" ,"Release Date","Required Age",
                     "Price ($)", "DLC Count", "Metacritic Score",
                     "Achievements", "Recommendations", 
                     "Median Playtime Forever (min)", "Peak CCU",
                     "Player Rating Ratio"),
       digits = 3) |>
  kable_styling()

```

From @tbl-game-example2, we can see that *Smart Game Booster*, *FINAL FANTASY IV*, and *Cowgirl Adventures* are similar as they have low Metacritic scores of 0 and positive player ratings.

### Cluster 3

```{r}
#| label: tbl-game-example3
#| tbl-cap: "Table Featuring Games From Cluster 3"
#| tbl-cap-location: bottom

#for reproducibility
set.seed(42069777)

# showcase games in cluster 3
games_c5 |>
  filter(cluster_standardized == 3) |>
  sample_n(6) |>
  kable(booktabs = TRUE,
       col.names = c("Name", "Cluster" ,"Release Date","Required Age",
                     "Price ($)", "DLC Count", "Metacritic Score",
                     "Achievements", "Recommendations", 
                     "Median Playtime Forever (min)", "Peak CCU",
                     "Player Rating Ratio"),
       digits = 3) |>
  kable_styling()

```

From @tbl-game-example3, we can see that *The Jungle*, *Meet Your Maker*, and *Hacker.exe* are similar as they have high required ages (13+) and are not free.

### Cluster 4

```{r}
#| label: tbl-game-example4
#| tbl-cap: "Table Featuring Games From Cluster 4"
#| tbl-cap-location: bottom

#for reproducibility
set.seed(42069777)

# showcase games in cluster 4
games_c5 |>
  filter(cluster_standardized == 4) |>
  sample_n(6) |>
  kable(booktabs = TRUE,
       col.names = c("Name", "Cluster" ,"Release Date","Required Age",
                     "Price ($)", "DLC Count", "Metacritic Score",
                     "Achievements", "Recommendations", 
                     "Median Playtime Forever (min)", "Peak CCU",
                     "Player Rating Ratio"),
       digits = 3) |>
  kable_styling()

```

From @tbl-game-example4, we can see that *KING HAJWALA*, *Stakeholder Game*, and *Ritter* are similar as they have low median playtimes (0 minutes!).

### Cluster 5

```{r}
#| label: tbl-game-example5
#| tbl-cap: "Table Featuring Games From Cluster 5"
#| tbl-cap-location: bottom

#for reproducibility
set.seed(42069777)

# showcase games in cluster 5
games_c5 |>
  filter(cluster_standardized == 5) |>
  sample_n(6) |>
  kable(booktabs = TRUE,
       col.names = c("Name", "Cluster" ,"Release Date","Required Age",
                     "Price ($)", "DLC Count", "Metacritic Score",
                     "Achievements", "Recommendations", 
                     "Median Playtime Forever (min)", "Peak CCU",
                     "Player Rating Ratio"),
       digits = 3) |>
  kable_styling()

```
From @tbl-game-example5, we can see that *Guild Wars: Eye of the NorthÂ®*, *Primal Carnage*, and *Citizen Sleeper 2: Starward Vector* are similar as they have higher Metacritic Scores and are not free.

:::

## Conclusion

From Tables [-@tbl-game-example1]-[-@tbl-game-example5], we can see that even games within the same cluster are not completely alike. This is logical because the elbow plot (see @fig-elbow-plot) showcased a lot of within-cluster variability for 5 clusters. One way to decrease the variability is to find more variables that could address this question of "which games are similar?". On the other hand, perhaps one of the 9 variables used in this analysis was negatively impacting the within-cluster variability. In future analyses, I will look deeper into the quantitative variables by examining their distributions to check for discrepancies in the data.

Although clustering did not perfectly group games from the 9 quantitative variables, we could still see some similarities based on game price, required age, and player reviews! Games target different players, so this analysis succeeded in some way. 

## Bonus

If you have a favorite game on Steam, use the following table (see @tbl-full-data) created with the DT package [@DT] to see which cluster it is in! Does its classification make sense?

```{r}
#| label: tbl-full-data
#| tbl-cap: "Table of Games"
#| tbl-cap-location: top
#| warning: false

# use DT to let user see all games and which cluster they belong to
games_c5 |>
datatable(colnames = c("Name", "Cluster" ,"Release Date","Required Age",
                     "Price ($)", "DLC Count", "Metacritic Score",
                     "Achievements", "Recommendations", 
                     "Median Playtime Forever (min)", "Peak CCU",
                     "Player Rating Ratio"), 
          # only 5 games at a time
          options = list(pageLength = 5)) |>
  # round player rating to 3 decimals
  formatRound(12, digits = 3)
```